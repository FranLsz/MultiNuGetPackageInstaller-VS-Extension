<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAA5KSURBVHhe7Z09ix3XHcb1EfQR9iPI8ossZK1Xi6RF
        lmTJEshOE0QglYvIhUkVsoaQQBolTcCVCpeBqHEpWNIEQiCqQkhhtgqkU6q0N+e5O2c1e/aZ8zJv55yZ
        54Ef9q7uzt458//tzJz/zNwLiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIo
        iqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoirKaXLp06aJhz+FS88+KUnw2
        X/xox7BneGo4NLwwHBmODZvmZf3SCLGJ5NhwRHhuOCS44gHJpyTFFLlXgAh2mkWlpylaJsPcdMnHxHtm
        cMUD/QdCyRYUsGGIACH2ml+VnqawWMEuideGofJdbIZMSYwp0EsoUsMzAwR4aRhTgBBPm7eSnmbjs6IS
        cTDxXhqYfE8NrnigavlMAXYJ8MbACnZuDpu3mh6zcfAXk214kR8m3wsDk++h4Zx8zWYeFFNgpQsQ4kWz
        Kukxg4jBZRtHLJc3hlPpvrp27ejXu7tHP9y/j2P/GgUIcdSUe3rMAEmQhfOTK1c2RoLNi/39zZ9u3tz8
        6969zX8ePNhsnjxhxbREjptyT48ZQAlSORIgjBkne9iZNtNpfkCCFI4EGM6j99+nY9vizExno4cEKQEJ
        MD0YXzb2XTR6bAWBMfRFYhwkQH5+9/HHdNt00eghQcZAApQPtgvbdl00ekiQGCRA/fztk0/otu2i0UOC
        AAmwfLA92bbvotFjHYJIALF5/JjWRheNHltBML1FX1QLEkDEwGqni0aPrSD0BSUhAcQYRPRCTmn0KEMQ
        CSDmADXG6o/R6DGPIBJAlEBKL6TRYxxBJICoAdQmq19Go0ecIBJALIGUXoiVYwdfoPgBih+g+KsSwLxP
        rPw3169v9i9f3q4g/ot1enX7tkQWW1DTVoAQuEvsubuAGsFKh2YnIAv2euznxYpI6IVAENw1xhdUCamX
        D+D1bDliPbC6YEAQ3FpJF1ID//vsM7piIX64f58uT6yD2F4IBMEN+HQhNYDzC7ZiIW6+++5m8+gRXaZY
        PrF1A0HwlAq6kNLpu/ewfLe/L0lWSmwvBILgUS50IaWTMp/N+OX165u/3LkjSVZIbO1sp3nZAmpgqCBf
        fPDBVpClS2Kn6+30vQUzetgLs59ZOrETO1aQKp97NKYgNUviCmD7WWydGZj+Ru9oTbN7GC82Fi5WEDwc
        jC6oZIYK8rUporYgpUoyVIAUIAt+x+KbqpG9ECtIlb0QHCKwlYrl9+ZEzRUkhyRzChALpkHxntj7XQps
        vV2sINX2QuwlJalce+edzauDAyoIGFMSHOej2HC5CwTA4QwE6Pve5wTX3bF1WgIxvZCtIH8+OKjyEAug
        6NiKhbAzWD5SJbF7gZoEiAFTomx9aydmL70VBA8sZguoBRQkW7kuHrz3HhWCEZIEewcU0FJk6GKJksT0
        QraCGJOqFgQnlL/46CO6gi6YufIdWjGoJOYkL/d5wtx8e+PG+XGoGOzt2Xq22Qpi/qduQcDnn2/+aFYY
        ewd3JQEuLek6KY+hLUnMwC6V7W0D7XGvmJheyFtBljCtZyT55717m+9v3dpeRmLB16zoU/nvw4fJh3NL
        A39ojhdyoSfOGdk6trGCHC9mSq+RhBX4EHBY1rV3WhuY4FhEvUT0Qqwgy7qRaAJJJMdb7BT5EiRh69fm
        VBAcV7MFVMuIkqDj7g7c2rHnc7VLEuqFnAqyyIbQCJJg5sYdtBC7ly9vfvrhh9uZtT/s7Z3y293dzc+N
        bJhJu2L+CrOfrQU8wMOOUc2ShGYiTwXBC9kCqmegJDgpdQetC4jx1dWrZ6ToAnPwkIgtpxba41SrJKFe
        yKkg+IvAFrAIekqCwwh3wLrArhqDzWTw8Stzwgux2DJLBzOE7fGqUZLQlD3kQLZfsAUshh6SxO49cMjE
        ij8WiFWjJKyvVJskoV4IBMEnfm6/WPwlzgmSxJ57QKI+ew4X7ElqOy/pup6tJknwXtm6Wc4IUutxZBKR
        ksTOXKGwWcH3obZzki/N+RYbO1BNLQV6IesTBERIEtP3GHpo5YI9UU17EfeOTJda6omtm+WMIIvrhfgI
        SGLHxAembFmhD+HHV67Q31UiOLxkY9emBkl8vZD1CgI6JMHsjB0TH6zAhwLp2O8qFXfsGKVL4uuFQJBD
        +8VieyE+iCQxgtw1h2CswIcSmpcvjdgLQUuWxDfmEgQ4kuQUBLDfVypuL8RHqZL4eiFnBAFsAaugJYkE
        iSf1HpsSJfH1QiRIm0YSCRJPzL39LqVJgvfD1g2cE6TkY8VZMJL8PeJOM0zHsuIeSuytw6Xg64X4KKrO
        PL0QCPK8/Y3VCwKMJO0x6WLMJqHly8qahaFeiI+Sao2tG4AgR+1vrG6qtwNcvNkeFwZ6FqzIh5By9XAJ
        xPRCfJQiSVcvRIJ0ELpPAOAwa4zrsCy1HV5ZWOGnUIIkXdv7nCCrnep1wA1k7XHpYqy9CESr9bJ3PE2G
        FX4KuSXp6oVIkA58c+MusTdJ+cCxPFt2DaT0QnzklKRre58TBLAFrI3UB2MPkaRmOcBvdndpwfchlyRd
        vRAIcux+ky1gbWBDueMSAodbKeckmAWb8qQch2zo17SZ4jCuTy/ERw5JurY3BDn3zZy7umJ48uTcuMSA
        E3fc14EHNDApgH1wA/v5IeB3Y7lYfkhUTAhA6DGEaT/AYSxmr8GOXogE8cDGJgX2F5y9bij4PUMO8SDU
        kD3ZkF6Ij7nrkK0bFURTvSfE9EJyg73VWFPNaFL2uWELD5JjBT4Gc0rCeiESxENMLyQXKOQpOvk4NOyz
        N2HFPRZzScK2NxVEU70nxPZC5gYF7DvHGQr2SKmSjNEL8TGHJKwXIkE8pPRC5gJ7jinlsKRKMlYvxMfU
        krDtTQUBbAFrY+iHhE7BFIdVXUCS2HOSMXshPqaUhPVCJIgHbAw2NrnACTkr5CmJvT5s7F6Ij6kkYdu7
        U5Cpd2e1wMYmB5jKZQU8B6EnoIMpeiE+JqlP0guRIAHY2ORgjOu9+oJzHvae2kzVC/ExRY2669UpiKZ6
        Tyhhqjfn3sMS2otM2QvxMbYk7npKkAAlCDLFjVmpxDyvixXwHIwpibu9OwXRVO8JJUz1zjlz1QXrEbhM
        3QvxMZYk7npKkAAlCMIKNgeha8nm6IX4GEMSd3t3CgLYAtYGBp2NzVygKFmx5gCHeuw9WubqhfgYKonb
        C5EgASTIW0IfzzBnL8THEEmc7X3sFWSojUuBjc1c5GgOdhESZO5eiI/etXu2F3IkQSJgYzMXNQmSoxfi
        o2/9ttbJL4imek/IOdWLomPFmoOQILl6IT76SNLqhUiQGHIKUtM5CGBFmptUSVrb2y+IpnpPyDnVW0IX
        3RJzTVbOXoiPFElavRAJEkPuXsgc93/EAFnZ+2uTuxfiI1aS1vZ+7hUEsAWsDQwsG5u5yHmhogXdfPbe
        XEoWBMRI0uqFHEqQCHILgkMbVrRzEmoSWl4dHNDCLImQJK3tHRYkxrg1wMZmTnIfZsXeWcgKskS8df22
        FyJBYmFjMyc5p3tjP7MEny3PirFUfLXdrFNYEE31npBzqteS46relPvS+37aVE66JGlm7CRILCUIgqeM
        oGBZIU9FzNSu5dsbN2gRlg6TpNnee0FBNNV7Qu6pXsuch1opHwdXYhc9BVeSphciQWJ5dfs2HZ8czCEJ
        ppbZ7+7ia1MnrPBqoi1J8wcxLAhoF8paweCxscnFlJKkfpAo9h7f37pFi642rCRNL0SCpLAf0Umek7Ef
        QYrDipRzDksp94GMBSRp/iDGCdLe9ayZbyK7yXOCGSZcRDj05B2HVLGzVW1qm9qNBQ1Ps347EiSBEh9F
        akFxo9udskfBa3E4FXONFQOHVqVenDgGFxC24i6a6n1Ln0OQuUHB4xwFexY8rgePD7XgexAp9entLkuX
        o+GiBEmk68Me18RK5ABx5yCa6j1LCU3DXOCcYyVygIcSpA+PHxc3ozUH6HXUcLXuiIQvNbHQQlkxzTTg
        KsA1VkvpcyQSvmHKwopk7Sz5fASP8MGD4Fa2x3Dx33LbRlO9HEiCk1Y2ZiWD94yZLoiARh9kwN2AK91T
        dPFagozAvz/9dHvyysYtF10CrOgEexSiBdFUb4BHj7aFONfeRALMgwQZEyMJjtlRsEMbcQACACwPSID5
        iRZEU72RGEns4KKYUdj4K88OwZgAoL2BxPTYcbfbAdvkZ1evvoi+1ARIkARakoj8MAEAq/MWh0mCAFoM
        giNJZqOnACEkyORIklGYSIAQ6YJoqrcHkiRIJgFCSJDZWLkkhQoQ4lmyIJrqHcCCJalUgBB7EmRuKpVk
        oQKESBdEU70jUKAkKxUghATJxsySSIBepAsC6AYX6YwoiQSYBAmSnUhJJEAWdnoJoqnekTGSSIDy2MqB
        sH/0IUHSwZgBzAICnMsBNr6iDBo9eMwL9ggPDYf/uHv3iBXBmpEAy6NRIT2mIA7dAlk6EmB9NOWeHlMw
        e24BLQDsFY/+eufOawkgQFPu6TGFVJsgbwwQ4KUBe79nBqzDyTReRMyA7RjYYeczwyHhiHBsoBtDFMfr
        ZtP3iykuVoi56BLgUvN2i47ZGAiTj4n33CD5pueo2Tz9YoqPFepUVC1AzpgNjbjibSdbCC8MTL43BreA
        ls5gQcacyZIAFcYUkSteH/ncwiyFWQWRAEp0THFeNDD5nhqYfC8NY8s3WBAUugRQqoop/C753MmWp82P
        9Isp/h0JoCiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
        oiiKoiiKoiiKoiiKoiiKoiiKoiiKovTPhQv/BxpHbTfkmFyHAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="infoBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAB4NJREFUeF7t
        XYtVG0kQJARCcAgIArAzODIwGeAMIAPI4MgAMuAygAxMBucM7qrkEoLVyNpPr9Td6nqvnmC1O9Ofms/O
        fnSSFYvF4uvFxcX38/PzG3w+gs8rYttPfP73kdr2vg/4qGO/s6yzs7NTFV3wBCYG/AvJumPi8PkvPj8l
        14oqm3Xcsc4SxYHAFqnWyZbaTNYeSUHc0CaZV5gDaG1nCPTfaoWtRByctI020laZXZgCxPELAnuNoG6M
        2d5Jm8Eb+iB3Cn2BoH1jS2oFNigf6ZPcK2wDg4RgeRjX5+JzCaGBI0h8lyUEAkHgGM9z9FaQjoEcGo5z
        jsAJEuh2Rr8vMgaMhcKSH+ruX7qBOHZCBD/TDwtUesv54pqI0Z3ClQca649pkjeVL2nmBnDmkuNcx8Hi
        DipmlwpjTLA76zpWHMawQwIMz7SSd1Aylgqrf2DsOoXRNd7bk/MC35eflfw6xZuPfkVQyd8b/Ymgkr93
        +hFBtORjQvUG3oO3+P+S5N/a9vZxX+f0IQIYEmXC94CA7Vxc4T7ct3OsVz7L7MMALcb9qR5sfEVSB9+i
        RSHw2FaZnsgcyOT9AhXftwxyxickcnQ3yWNZRqdMd2QuZPJ+gEo5djaN8UIE5R+ZOxksq1WHM+5n2Vhd
        o+u1fdj3NqXld8GyWGarLi9kTpgbmTwfUFmEGb95a2CZnTo88kXmzgOojKdOrYrdEDaadf1dsOxWnZ4I
        G+eZD6B74Z08zUo9EQG4ksnmYNmtOr2RuZLJdkDBIRZ7LMf+Llh2q06HtB0KoHz3XT/JLlomzwbW0arb
        G5kzmTwNnFmisBB39JQA1mTOmDuZPR4oLNJ9+w8yezawjk6dnvkos8eBk4lGoW5ZPcAmmUOZPhwoINSd
        PSWAJsddMIrW+kmOezJ/NrCOVt2eOaoXwIEh7+ub1OXtQMRGIQ7rBQI7yl5gtitjLLtVZwQOahg4INJM
        d4Nw1vyiCMts1RWI/c6QEjhKTjv9aYBlduoIx14NA93cj9bB0Qg/zK4JsKxWHdHI3Mql7cBO4V7ItI0W
        IsiSfJK5lVttoIs4ax0YnNdybzB4bKes8GSO5d4msEPoyd8fOOidPNyXx3TKyMLtk0F0Edkf4+Yl7etW
        K+A2fqd9WsemIHMslz9Dqm8eVMxF5lppXwPKCHHNvzidzLXSvgY2RrvIURxJ5lpp/w10CVFudSoaUan/
        DWyIcMtz0ZbrW+fRJYS9yFEcR+Zc6a/x/xj5aR6Af7Kf/xc7ZM6V/uUcoLlTMTeXyc+4AAR1840fczDS
        G0R2crkgBKfSXO1acansGYBYpZorMfd0Kt0KoPJljoQCuOX47/4NGEOpfJkjmwDAp4xOlQB6kv6UAAag
        BBCEypc5sgogzT2AKypf5kjYWF5SLgIpX+ZI2Vu2Nkan8mWOEkAQKl/mKAEEofJljpQCgFOp1rdJ5csc
        2QQAf15zqnomJBRArQMMQQkgCJUvc6QUAP6oi0E9kbCxLC8G1eXgnkjYA9zSqbohpCcSCuAq5S1hypc5
        sgng/RnB1peRuXRqBmQTgNxaCuBX98vIlFvmSCaAX3IrsbKNkSlO9EVuLR1L9WiY3DJHMgGsHw3DhlQP
        h8otc2QSwPsEcIXWTlEpl8yRSQByaY3UzhkhS4zoh1xaAxvTrAjKJXMkEsDmK2IyLQjJJXNkEcDG+L8C
        vkyxHiB3zJFEAOvz/y7wZYoXRcodc2QQAHzY/jp9dA0pXhUrd8yRQQDMsdxpA06Gv0dQrpgjugCYW7my
        Hdgp/Ovi5Yo5Eghg9+vi0UOE/8EIuWKO6AJgbuXKn4GdQ08G5YY5ggug/49qQimh1wTkhjkiC2Dn5K+L
        yM7KBXNEjQntlgv9EbkXkAvmiCoA5lIuDENUh2W+OSLGY1TrXyFqLyDzzRFRAKNb/wooJNyDIzLdHAEF
        8CTTxwMK4rpAqItEMt0cwQTwi7mT6dMAx0OtDspsc0QSAHMms22AAl9bFXmkTDZHFAEwVzLZDpEmhDLZ
        HFEEMHnitw0IQIjbxmSuOSIIgDmSufMgQhBkqjm8+077ZOp8QPfCXxhzfVYgU83hXACc9Z/K1HnhfT4g
        M83hWQCzjfvbgGC4fZxMJprDqwBg17zj/jagcpf3Dcg8czgVQP/r/HPAY1Bkmjm8+Up7ZNrhwIkHDHG1
        SLRYLL7OQZTt5qflGfO9Tfp2waMIMtNV8lcoEeyHLpO/QolgXrpO/goSgdvz5ahkTN0n/yNgdIrnDJ3w
        sKd6YwHV1s/STyRjqHDGBJzg+4dSvYZuT2TMLhXG2MDY9aXmBf2p8d7mdi5PgGPpXkxtTcZI4coJKPsb
        nKxTxQ4ZE8ZGYcoP9QY1N0AM0rf6beA4hwCk+8GKAXxKOdYPhYaFo5kk0tej6u77IrsQKvE9wSAhYJlW
        Eh8q8SOAoHH94AcY7sVVtJm20we5U5gCBJKvsGOv4PnMgbaxtQ97G0dhGBBfzhVuwYPPF2gDbaFNMq+w
        TyDwfE7hEkm4lyDm7CF4zs6E8yLXJeuWGQVvUC9xBXLB6UmJW3FjTsFtH/fRMexlrvK27pOT/wHZ6DHh
        BI2OVgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAAAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAQAQAAAAAAAAAAAAAAAAAAAAA
        AAD///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wFZWP+BWVj/UVlY/0FZWP8R////Af///wH///8BMDAwITAwMEEwMDBBMDAwQTAw
        MEEwMDBBMDAwcTAwMIE7O3G/WVj//1lY//9ZWP//WVj//1lY//9RUfb/RUW0/z4+h/89PX//Nzdi/zY2
        WP8xMTv/MDAw/zAwMP8wMDD/Oztx/1lY//9ZWP//WVj//1lY//9ZWP//RUWx/zY2WP87O3X/PT1//0FB
        mf9HR7z/SUnG/0lJxv9ERKv/QkKj/0JCn/9ZWP//WVj//1lY//9ZWP//U1P//zAwMP8wMDD/NTVS/z4+
        iv87O3f/Nzde/0lJxv9JScb/SUnG/0pKy/9ERK7/WVj//1lY//9ZWP//WVj//09P6P8wMDD/MDAw/zw8
        ff9AQJb/QECW/zQ0S/9JScb/SUnG/0pKy/9TU///TEzZ/1lY//9ZWP//WVj//1lY//9GRrz/MTE3/zMz
        RP84OGX/QECW/z8/kP82Nlz/SUnG/0pKy/9VVf//T0/o/09P6P9ZWP//WVj//1lY//9ZWP//QUGd/zw8
        ff9AQJb/MzNE/zIyPv8wMDD/NjZY/0pKy/9VVf//WVj//0xM2f9WVv//WVj//1lY//9ZWP//TEzX/z8/
        kf84OGX/Ozt3/zExN/8wMDD/MDAw/zw8e/9VVf//WVj//1lY//9ERK7/WVj//1lY//9ZWP//T0/o/zAw
        MP9KSs7/SkrL/0RErv8/P5D/Oztx/z09gf9SUv//WVj//1lY//9ZWP//QkKf/z8/kP9ERK7/SkrL/0xM
        2f9GRrz/WVj//1lY//9ZWP//WVj//1lY//9ZWP//WVj//1lY//9ZWP//WVj//zs7cf8wMDD/MDAw/zAw
        MP8wMDD/MDAw/zAwMN82Nl2/Pj6Gv0RErr9LS9W/UlL7v1lY/79ZWP/fWVj//1lY//8+PoaP////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wFZWP8h////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8BAAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA
        //8AAP//AAD//w==
</value>
  </data>
</root>